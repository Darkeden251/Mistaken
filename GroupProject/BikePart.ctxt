#BlueJ class context
comment0.target=BikePart
comment0.text=\r\n\ This\ is\ the\ class\ which\ defines\ the\ characteristics\ of\ BikePart\ objects.\r\n\r\n\ @author\ Abdel\ Hamid\ Shehata\r\n\ @version\ 9/11/2019\r\n
comment1.params=
comment1.target=BikePart()
comment1.text=\r\n\ Placeholder\ constructor\ for\ BikePart\ objects,\ sets\ all\ values\ to\ a\ default\r\n
comment10.params=minQuantity
comment10.target=void\ setMinQuantity(int)
comment10.text=\r\n\ setter\ method,\ changes\ the\ part's\ minimum\ quantity\ to\ the\ integer\ provided\r\n\ @param\ minQuantity\ integer,\ the\ number\ becoming\ the\ part's\ new\ minimum\ quantity.\r\n
comment11.params=
comment11.target=java.lang.String\ getNumber()
comment11.text=\r\n\ Getter\ for\ the\ partNumber\ of\ a\ BikePart\r\n\ @return\ an\ integer,\ the\ part\ number\ of\ the\ part\r\n
comment12.params=number
comment12.target=void\ setNumber(java.lang.String)
comment12.text=\r\n\ Setter\ for\ the\ partNumber\ of\ a\ BikePart,\ changes\ the\ partNumber\ to\ the\ given\ integer\r\n\ @param\ number\ the\ number\ we\ want\ to\ become\ the\ new\ part\ number\r\n
comment13.params=
comment13.target=double\ getPrice()
comment13.text=\r\n\ Getter\ for\ the\ normal\ price\ of\ a\ BikePart\r\n\ @return\ a\ double,\ the\ price\ of\ the\ part\r\n
comment14.params=price
comment14.target=void\ setPrice(double)
comment14.text=\r\n\ Setter\ for\ normal\ price,\ changes\ the\ price\ to\ the\ given\ double\r\n\ @param\ price\ the\ new\ price\ of\ the\ part\r\n
comment15.params=
comment15.target=double\ getSalesPrice()
comment15.text=\r\n\ Getter\ for\ the\ SalesPrice\ of\ a\ BikePart\r\n\ @return\ a\ double,\ the\ price\ of\ the\ part\ when\ it\ is\ on\ sale\r\n
comment16.params=salesPrice
comment16.target=void\ setSalesPrice(double)
comment16.text=\r\n\ Setter\ for\ the\ SalesPrice\ of\ a\ BikePart\r\n\ @param\ salesPrice\ the\ new\ sales\ price\ we\ want\ to\ set\r\n
comment17.params=
comment17.target=boolean\ getOnSale()
comment17.text=\r\n\ Getter,\ returns\ whether\ a\ bikePart\ is\ onSale\r\n\ @return\ a\ boolean,\ whether\ or\ not\ the\ part\ is\ on\ sale.\r\n
comment18.params=onSale
comment18.target=void\ setOnSale(boolean)
comment18.text=\r\n\ Setter,\ changes\ whether\ a\ bikePart\ is\ onSale\ or\ not\r\n\ @param\ onSale\ true\ or\ false\ depending\ on\ if\ we\ want\ the\ part\ on\ sale.\r\n
comment19.params=
comment19.target=int\ getQuantity()
comment19.text=\r\n\ Getter,\ returns\ the\ quantity\ of\ parts\ in\ the\ system.\r\n\ @return\ an\ int,\ number\ of\ this\ part\ in\ inventory.\r\n
comment2.params=name\ number\ price\ salesPrice\ onSale\ quantity
comment2.target=BikePart(java.lang.String,\ java.lang.String,\ double,\ double,\ boolean,\ int)
comment2.text=\r\n\ Fully\ paramaterized\ constructor\ for\ a\ BikePart\ object\ where\ all\ variables\ are\ provided.\ Minquantity\ for\ all\ parts\ in\ this\ project\ has\ been\ set\ to\r\n\ two,\ but\ in\ a\ real-world\ scenario\ the\ minimum\ quantity\ of\ each\ part\ would\ be\ based\ on\ projected\ demand.\r\n\ @param\ name\ a\ String,\ name\ of\ the\ part\ being\ created\r\n\ @param\ number,\ the\ number\ of\ the\ part\ being\ created,\ stored\ as\ a\ String\ rather\ than\ an\ int\ because\ it\ makes\ it\ easier\ for\ some\ methods\r\n\ @param\ double\ price,\ the\ regular\ price\ of\ the\ part\r\n\ @param\ double\ salesPrice,\ the\ price\ of\ the\ part\ when\ it\ is\ on\ sale\r\n\ @param\ boolean\ onSale,\ whether\ or\ not\ the\ part\ is\ on\ sale\r\n\ @param\ quantity,\ the\ quantity\ of\ the\ part\ in\ inventory\r\n
comment20.params=quantity
comment20.target=void\ setQuantity(int)
comment20.text=\r\n\ Setter,\ changes\ the\ quantity\ of\ a\ part\ in\ inventory.\r\n\ @param\ quantity\ new\ quantity\ of\ this\ part\ \r\n
comment21.params=
comment21.target=void\ quantityUp()
comment21.text=\r\n\ simple\ method\ to\ increment\ quantity\ by\ 1\r\n\ \r\n
comment22.params=
comment22.target=void\ quantityDown()
comment22.text=\r\n\ Simple\ method\ to\ increment\ quantity\ by\ -1\r\n\ \r\n
comment23.params=num
comment23.target=void\ quantityUpMulti(int)
comment23.text=\r\n\ increases\ the\ quantity\ by\ a\ given\ number\r\n\ @param\ num\ int\ the\ number\ the\ quantity\ is\ being\ changed\ by\r\n
comment24.params=num
comment24.target=void\ quantityDownMulti(int)
comment24.text=\r\n\ decreases\ the\ quantity\ by\ a\ given\ number\r\n\ @param\ num\ int\ the\ number\ the\ quantity\ is\ being\ changed\ by\r\n
comment25.params=part
comment25.target=int\ compareTo(BikePart)
comment25.text=\r\n\ compareTo\ method\ for\ comparing\ two\ bikeparts\r\n\ @return\ int,\ 0\ if\ the\ parts\ are\ the\ same,\ -1\ or\ 1\ if\ they\ are\ not.\r\n\ @param\ part\ BikePart,\ the\ part\ being\ compared\ to\ this\ BikePart\r\n
comment3.params=
comment3.target=java.lang.String\ partInfo()
comment3.text=\r\n\ This\ method\ returns\ information\ about\ a\ BikePart\ object\r\n\ useful\ for\ displaying\ inventories\r\n\ @return\ String\ all\ of\ the\ part's\ details\r\n
comment4.params=
comment4.target=java.lang.String\ partInfoSale()
comment4.text=\r\n\ this\ method\ displays\ the\ relevant\ details\ when\ making\ a\ sale\ of\ an\ item\ that\ IS\ at\ sale\ price\r\n\ @return\ String\ the\ part\ name,\ number,\ sale\ price,\ on-sale\ status,\ and\ quantity\ of\ a\ part\ in\ one\ String\r\n
comment5.params=
comment5.target=java.lang.String\ partInfoNoSale()
comment5.text=\r\n\ this\ method\ displays\ relevant\ sale\ details\ for\ an\ item\ that\ is\ NOT\ at\ sale\ price\r\n\ @return\ String\ the\ part\ name,\ number,\ price,\ on-sale\ status,\ and\ quantity\ of\ a\ part\ in\ one\ String.\r\n
comment6.params=
comment6.target=java.lang.String\ partInfoShort()
comment6.text=\r\n\ a\ shortened\ version\ of\ partInfo(),\ displaying\ only\ the\ name\ and\ quantity\ of\ a\ part.\r\n\ @return\ String\ the\ partName\ and\ quantity\ of\ a\ part\ in\ one\ String.\r\n
comment7.params=
comment7.target=java.lang.String\ getName()
comment7.text=\r\n\ Getter\ method,\ returns\ the\ name\ of\ a\ BikePart\r\n\ @return\ a\ String,\ representing\ the\ part's\ name\r\n
comment8.params=name
comment8.target=void\ setName(java.lang.String)
comment8.text=\r\n\ Setter\ method,\ changes\ the\ name\ of\ a\ BikePart\ to\ the\ given\ string\r\n\ @param\ name\ a\ String\ which\ becomes\ the\ object's\ new\ name\r\n
comment9.params=
comment9.target=int\ getMinQuantity()
comment9.text=\r\n\ Getter\ method,\ returns\ the\ minimum\ quantity\ required\ of\ a\ bikepart\ (in\ this\ program,\ all\ minimum\ quantites\ are\ defaulted\ to\ 2)\r\n\ @return\ int\ an\ integer,\ the\ minimum\ number\ of\ this\ part\ we\ need\ to\ keep\ in\ inventory.\r\n
numComments=26
